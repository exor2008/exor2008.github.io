- title: Pleiades
  description: DIY lamp with gesture control
  status: Done
  links:
    - url: https://github.com/exor2008/pleiades
      verbose: GitHub
    - url: https://youtu.be/gmsWFZkWBEI?si=JtCGZfpYXuNEFkyy
      verbose: Demo
    - url: https://youtube.com/shorts/F5HVr7ZAOYw
      verbose: Instructions Video
    - url: https://www.instagram.com/pleiades_led
      verbose: Instagram
  long_description: |
    <ul>
    <li>Developed a gesture-controlled lamp using Raspberry Pi Pico and an LED matrix
    <li>Firmware written in Rust utilizing the Embassy framework for asynchronous embedded programming.
    <li>Implemented drivers for ws2812b LED device and APDS-9960 gesture sensor
    <li>Used PIO for stable and precise bit-banging protocols.
    </ul>
  stack:
    - Rust
    - embedded
    - embassy
    - assembly
    - RP2040

- title: Flight control software
  description: Based on RP PI Pico and Rust
  status: Work in progress
  links:
    - url: https://github.com/exor2008/drone
      verbose: GitHub
    - url: https://youtu.be/3mVxf-AE9MU
      verbose: Demo
  long_description: |
    <ul>
    <li>Led a project to develop a flight controller based on the Raspberry Pi Pico platform, utilizing the Rust programming language for firmware development.
    <li>Integrated a 10 degrees of freedom IMU module (MPU-9250) for sensor data acquisition, including accelerometer, gyroscope, and magnetometer readings.
    <li>Developed drivers for the MPU-9250 sensor module and implemented calibration algorithms for each sensor to ensure accurate data measurements.
    <li>Implemented data fusion using the Mahony filter, enabling the flight controller to determine attitude relative to the Earth's magnetic field.
    <li>Created a debug panel in Python, available in both web and desktop versions, for monitoring and troubleshooting.
    <li>Planned future development includes the implementation of a PID motor control loop for enhanced flight stability and control.
    <ul>
  stack:
    - RP2040
    - Rust
    - JavaScript
    - THREE.js
    - Python
    - embedded
    - embassy

- title: Fluid simulator
  description: Powered by CUDA parallel computations
  status: Done
  links:
    - url: https://github.com/exor2008/fluid-proto
      verbose: Prototype
    - url: https://github.com/exor2008/fluid-simulator
      verbose: GitHub
    - url: https://youtu.be/pCPggrFf64g
      verbose: Demo
  long_description: |
    <ul>
    <li>Developed a fluid simulator based on the Navier-Stokes Equations, implemented as a mathematical module using Rust and CUDA for parallel computation.
    <li>Created a service with an API using the Rocket web framework to provide access to the fluid simulation module.
    <li>Designed a frontend using THREE.js to visualize fluid flow in 3D, allowing real-time observation of fluid behavior.
    <li>Utilized CUDA kernels for parallel computation, enabling efficient and real-time fluid simulation.
    <li>Implemented collision detection between solids and fluid by considering the normals of the 3D model, enhancing simulation accuracy.
    <li>The simulator's capabilities extend to applications in aerospace engineering for calculating aerodynamic qualities of spacecraft and weather prediction, similar to those used by NASA.
    </ul>
  stack:
    - Rust
    - Rocket
    - CUDA
    - JavaScript
    - THREE.js
    - Python
    - gltf

- title: 1:1 Scale Planetarium
  description: Physical model of solar system
  status: Done
  links:
    - url: https://github.com/exor2008/solar-system-sim
      verbose: GitHub
    - url: https://youtu.be/HT2_h-bOYAo
      verbose: Demo
  long_description: |
    <ul>
    <li>Developed a simulator of the Solar system with a focus on accurately representing the scale of celestial objects.
    <li>Ensured that all objects, including planets, have realistic values such as radii, masses, velocities, and orbital characteristics.
    <li>Utilized a realistic physical model to enable simulation of "What if..." scenarios, such as introducing a black hole at the center of the solar system or altering the speed of Earth.
    <li>Leveraged the Bevy Entity-Component-System game engine architecture to simulate tens of thousands of objects simultaneously in real time, allowing for immersive and dynamic exploration of the Solar system.
    </ul>
  stack:
    - Rust
    - Bevy game engine

- title: Oktree
  description: Fast octree implementation.
  status: Done
  links:
    - url: https://crates.io/crates/oktree/
      verbose: crates.io
    - url: https://github.com/exor2008/oktree/
      verbose: guthub
    - url: https://docs.rs/oktree/latest/oktree/
      verbose: Documentation
  long_description: |
    Optimizations:
    <ul>
    <li>Unsigned arithmetics, bitwise operations.
    <li>Tree structure is represented by flat, reusable Pool. Removed data is marked only.
    <li>Few memory allocations. heapless structures are used.
    <li>No smart pointers (RC, RefCell e.t.c)
    </ul>
  stack:
    - Rust

- title: Game console
  description: Based on RP PI Pico and Rust
  status: Work in progress
  links:
    - url: https://github.com/exor2008/koldun
      verbose: GitHub
  long_description: |
    <ul>
    <li>Developed a do-it-yourself (DIY) game console based on the RP PICO platform and programmed in the Rust language.
    <li>Writing a driver for the display using the ILI9486 chip to enable graphics rendering.
    <li>Efficiently managing game logic and graphics within the limited memory constraints of 256 KB SRAM and 2 MB FLASH.
    <li>Utilized a coprocessor (PIO) and specialized assembler to implement the display driver, enabling dynamic graphics with a high screen refresh rate.
    </ul>
  stack:
    - RP2040
    - Rust
    - embedded
    - embassy

- title: Set of discord and telegram bots
  description: For document management automation and AI
  status: Done
  links:
    - url: https://github.com/exor2008/health_care_autofiller
      verbose: Telegram document bot
    - url: https://github.com/exor2008/google-ai-bot-demo
      verbose: Discord API for Google PaLM AI
    - url: https://github.com/exor2008/ai-discord-bot-demo
      verbose: Discord API for OpenAI ChatGPT
  long_description: |
    <ul>
    <li>Developed a comprehensive set of Discord and Telegram bots capable of handling various tasks, ranging from document management automation to providing APIs for well-known AI services.
    <li>Implemented functionalities to automate document management processes and streamline workflow.
    <li>Integrated APIs for accessing and utilizing popular AI services, enhancing bot capabilities and enabling advanced functionalities.
    <li>Ensured seamless communication and interaction with users on both Discord and Telegram platforms.
    </ul>
  stack:
    - Python
    - Discord
    - Telegram
    - AI

- title: FPV drones
  description: Manufacturing and Piloting
  status: Done
  links:
    - url: https://www.youtube.com/channel/UC_RlYeUgry3Mc4mN7tIUUOg
      verbose: Youtube
    - url: https://www.instagram.com/asymmetric_fpv
      verbose: Instagram
  long_description: |
    <ul>
    <li>Assembled, soldered, and tuned FPV (First Person View) drones from scratch, ensuring precise construction and optimal performance.
    <li>Applied expertise in drone assembly techniques to carefully select and integrate components for optimal functionality and durability.
    <li>Conducted thorough testing and tuning procedures to fine-tune flight characteristics, ensuring stability, responsiveness, and efficiency.
    <li>Leveraged hands-on experience and technical skills to troubleshoot and resolve any issues during the assembly and tuning process, ensuring the delivery of high-quality drones.
    </ul>
  stack:
    - Inav
    - ExpressLRS
    - soldering
